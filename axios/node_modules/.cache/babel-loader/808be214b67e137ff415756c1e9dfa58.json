{"ast":null,"code":"import axios from \"axios\";\nconst authFetch = axios.create({\n  baseURL: \"https://course-api.com\"\n});\nauthFetch.interceptors.request.use(request => {\n  request.headers.common[\"Accept\"] = `application/json`;\n  console.log(\"request sent\"); // must return request\n\n  return request;\n}, error => {\n  return Promise.reject(error);\n});\nauthFetch.interceptors.response.use(response => {\n  console.log(\"got response\");\n  return response;\n}, error => {\n  console.log(error.response);\n\n  if (error.response.status === 404) {\n    // do something\n    console.log(\"NOT FOUND\");\n  }\n\n  return Promise.reject(error);\n});\nexport default authFetch; //use take two callback function first for request and response and second error","map":{"version":3,"sources":["/Users/robinsahu/Desktop/react-projects/axios/src/axios/interceptors.js"],"names":["axios","authFetch","create","baseURL","interceptors","request","use","headers","common","console","log","error","Promise","reject","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAlB;AAGAF,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACGD,OAAD,IAAa;AACXA,EAAAA,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAuB,QAAvB,IAAoC,kBAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAFW,CAGX;;AACA,SAAOL,OAAP;AACD,CANH,EAOGM,KAAD,IAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH;AAYAV,SAAS,CAACG,YAAV,CAAuBU,QAAvB,CAAgCR,GAAhC,CACGQ,QAAD,IAAc;AACZL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOI,QAAP;AACD,CAJH,EAKGH,KAAD,IAAW;AACTF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACG,QAAlB;;AACA,MAAIH,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACjC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZH;AAeA,eAAeV,SAAf,C,CAEA","sourcesContent":["import axios from \"axios\";\n\nconst authFetch = axios.create({\n  baseURL: \"https://course-api.com\",\n});\nauthFetch.interceptors.request.use(\n  (request) => {\n    request.headers.common[\"Accept\"] = `application/json`;\n    console.log(\"request sent\");\n    // must return request\n    return request;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nauthFetch.interceptors.response.use(\n  (response) => {\n    console.log(\"got response\");\n    return response;\n  },\n  (error) => {\n    console.log(error.response);\n    if (error.response.status === 404) {\n      // do something\n      console.log(\"NOT FOUND\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default authFetch;\n\n//use take two callback function first for request and response and second error\n"]},"metadata":{},"sourceType":"module"}